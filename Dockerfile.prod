FROM python:3.11-slim-bullseye as requirements-stage

WORKDIR /tmp/

# copy project
RUN pip install --upgrade pip && pip install poetry poetry-plugin-export

COPY pyproject.toml poetry.lock ./

RUN poetry export --without dev --without-hashes --format=requirements.txt > requirements.txt

FROM python:3.11-slim-bullseye

ARG USER_DIR=/home/app

# set work directory
WORKDIR $USER_DIR

# set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV POETRY_VIRTUALENVS_CREATE=false

# Create the app user
RUN groupadd app && useradd -g app app && mkdir -p $USER_DIR

# install depedencies for postgres
RUN apt-get update && apt-get install -y\
    gcc\
    libpq-dev\
    git\
    && rm -rf /var/lib/apt/lists/*

# copy project
COPY --from=requirements-stage /tmp/requirements.txt .

# install dependencies
RUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r requirements.txt

COPY manage.py ./
COPY pyheat1d_web/ ./pyheat1d_web
COPY templates/ ./templates

# RUN chown -R app:app $USER_DIR
# USER app

EXPOSE 8000

CMD ["gunicorn", "app.wsgi", "--workers", "3", "--bind", "0.0.0.0:8000", "--log-file=-", "--access-logfile=-"]
